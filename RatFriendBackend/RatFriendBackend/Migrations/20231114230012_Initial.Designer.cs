// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RatFriendBackend.Persistence;
using RatFriendBackend.Persistence.Models;

#nullable disable

namespace RatFriendBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231114230012_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RatFriendBackend.Persistence.Models.FriendActivityInfo", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("FriendId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<List<GamesInfo>>("GameInfos")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<decimal>("LastPlayTime")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("StillPlayingWithoutUs")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("FriendActivityInfos");
                });

            modelBuilder.Entity("RatFriendBackend.Persistence.Models.User", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ApiToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("LastPlayTime")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RatFriendBackend.Persistence.Models.UserFriendActivity", b =>
                {
                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("FriendId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("FriendActivityInfoId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("UserId", "FriendId");

                    b.HasIndex("FriendActivityInfoId");

                    b.ToTable("UserFriendActivities");
                });

            modelBuilder.Entity("RatFriendBackend.Persistence.Models.UserFriendActivity", b =>
                {
                    b.HasOne("RatFriendBackend.Persistence.Models.FriendActivityInfo", "FriendActivityInfo")
                        .WithMany("Users")
                        .HasForeignKey("FriendActivityInfoId");

                    b.HasOne("RatFriendBackend.Persistence.Models.User", "User")
                        .WithMany("FriendActivities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendActivityInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RatFriendBackend.Persistence.Models.FriendActivityInfo", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RatFriendBackend.Persistence.Models.User", b =>
                {
                    b.Navigation("FriendActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
